name: Release

on: push

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/github-script@v7
      id: my-script
      with:
        result-encoding: string
        retries: 3
        script: |
          const latestRelease = await github.rest.repos.getLatestRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
          })
          const commits = await github.rest.repos.compareCommitsWithBasehead({
            owner: context.repo.owner,
            repo: context.repo.repo,
            basehead: `refs/tags/0.169.0...refs/tags/${latestRelease.data.tag_name}`,
          })
          const groups = {
            feat: `## Features\n\n`,
            fix: `## Fixes\n\n`,
            docs: `## Documentation\n\n`,
            experimental: `## Experimental\n\n`,
            other: `## Other changes\n\n`,
          }
          for (const commit of commits.data.commits) {
            const match = commit.commit.message.match(/^(?<type>\w+)\s*:\s*(?<message>.+)\n/)
            const type = match?.groups?.type
            const message = match?.groups?.message
            if (type && message) {
              (groups[type] ?? groups.other) +=
                `- ${message} by @${commit.author.login}\n`
            }
          }
          return Object.values(groups).join('\n\n')
